/////////////////////////////////////////////////////////////////////////////
#if !defined(_QFixPer_h_)
#define _QFixPer_h_
//---------------------------------------------------------------------------
#include "char_ary.h"
#include "KTime.h"
#include "kpersistent.h"
#include "QFixTagType.h"

/////////////////////////////////////////////////////////////////////////////
namespace Kstl {
   using namespace Kway::FIX;
   
/////////////////////////////////////////////////////////////////////////////
// TFixMsgType2
/////////////////////////////////////////////////////////////////////////////
inline K_mf(bool) pload (const persistent& per,       TFixMsgType2& a)  { return per.loadBytes(a); }
inline K_mf(bool) psave (      persistent& per, const TFixMsgType2& a)  { return per.saveBytes(a); }

/////////////////////////////////////////////////////////////////////////////
// TFixChar
/////////////////////////////////////////////////////////////////////////////
inline K_mf(bool) pload (const persistent& per,       TFixChar& a)  { return per.load(&a, 1, false); }
inline K_mf(bool) psave (      persistent& per, const TFixChar& a)  { return per.save(&a, 1, false); }

/////////////////////////////////////////////////////////////////////////////
// TFixInt
/////////////////////////////////////////////////////////////////////////////
inline K_mf(bool) pload (const persistent& per,       TFixInt& a)  { return per.loadHiLoTrans(a); }
inline K_mf(bool) psave (      persistent& per, const TFixInt& a)  { return per.saveHiLoTrans(a); }

/////////////////////////////////////////////////////////////////////////////
}; // namespace Kstl

/////////////////////////////////////////////////////////////////////////////
#endif // !defined(_QFixPer_h_)
